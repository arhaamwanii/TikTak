101

-in case of react when updating your state based on the previous value you sould not do it direcly you should lauch an anonymous mfuntion to get the latest value of the state otherwise it will do it based of the value which was set at the time of last rerender/compnonet mounting and will not consider the chages made to it after that-- using this method you ensure that the most recent value of the state is recieved.
-.map
    it creates a new array. and iterates over that
    by default gives you an parameter acutall component(required) + gives you an index(number based on positio)
    in our case we rndered for every value in the initalGameboard an list item
    for this list item, we did not use the inital value of the game board but insted we created a whole new map  for that inital "row" which is just the reffernce to the value inside the inital game board whihc itself is a array with the col stuff inside it 
-for of
    it dosnt create  anew array and iterates over the original array instead

-UPDATING STATE IMUTABLY
    in case if javascript the values of arrays and objects don't give you the actuall value it gives you the reffernce to the actuall value
    "state that depends on an array or an object should be updated in an imuatble way"
    - so what we do is instead of directly udating the arra/object we make a copy of it and then update that
    
repeat
    - in js first if you make a obj then you make a copy of the obj if you opdate the copy you will be updating the actuall object as well
    - so we need to make a deep copy  i.e [...objectFirst]

    - updating state in an imutable way means that we first make a copy of the object/array then we go ahead and update that instead of just updating the object/array directly
    - deep copy i.e [...firstObject]

LIFTING THE STATE UP 
    -managing the state in the closest ancestor component that  need that information 
    - passing it down usign PROPS 
    - THIS IS SOMETHING YOU WILL HAVE TO DO A LOT OF

    - another thign if you 
        -check a state at the time of passing it it will pass true or false based on the check rather than the actuall value

FOR A FOR OF LOOP TO  EXECUTE
    for an for of loop to execute - for a for of loo
    for(cosnt hour of hours){
        if hours here is empety this loop won't even begin but if it is not then we can start to see things happening
    }


MANAGE AS LITTLE STATE AS POSSIBLE
    - you should try to derive as many states as possible from a single one
    - drive the living Fuck out of the states


NULL IN JS is treated as a  - FALSE

    
    

    
